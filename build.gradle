import static org.gradle.api.logging.LogLevel.*

buildscript {
    repositories {
        maven {
            url "http://sonar.dev.cwds.io:8081/artifactory/repo"
        }
    }
}

project.logging.setLevelInternal(INFO)

project.ext {
    projectGroup = 'gov.ca.cwds.services'
    projectVersion = '3.2-SNAPSHOT'

    mainclass = "gov.ca.cwds.rest.DoraApplication"
    configPath = "$rootProject.projectDir/config/"

    targetDockerHubOrganization = System.env.DOCKERHUB_ORG ?: 'cwds'

    buildEnv = System.env.BUILD_ENV ?: 'JENKINS'
    devDockerHost = System.env.DEV_DOCKER_HOST ?: '192.168.99.100'
    devDockerPort = 2376
}

repositories {
    maven { url "http://sonar.dev.cwds.io:8081/artifactory/repo" }
}

task printConfig {
    doLast {
        project.ext.properties
                .sort { e1, e2 -> e1.key <=> e2.key }
                .each { k, v -> println "${k} = " + v }
    }
}

tasks.withType(Test) {
    enableAssertions = true
}

// reused in sub-modules
def isPortOpen(host, port) {
    try {
        Socket socket = new Socket(host, port)
        socket.close()
        return true
    } catch (IOException e) {
        return false
    }
}

// reused in sub-modules
task checkDockerService {
    enabled = project.buildEnv == 'WIN_DEV'
    doFirst {
        if (!isPortOpen(project.devDockerHost, project.devDockerPort)) {
            throw new GradleException('Docker service is not available. Windows users should start Docker Quickstart Terminal of Docker Toolbox')
        }
    }
    doLast {
        def dockerEnvVars = [:]
        dockerEnvVars['DOCKER_CERT_PATH'] = System.getProperty("user.home") + '/.docker/machine/machines/default'
        dockerEnvVars['DOCKER_HOST'] = "tcp://$project.devDockerHost:$project.devDockerPort"
        dockerEnvVars['DOCKER_MACHINE_NAME'] = 'default'
        dockerEnvVars['DOCKER_TLS_VERIFY'] = 1

        childProjects.each {
            k, childProject -> childProject.tasks.withType(Exec) { environment << dockerEnvVars }
        }
    }
}
